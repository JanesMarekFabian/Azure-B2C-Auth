# =============================================================================
# AZURE B2C COMPLETE INFRASTRUCTURE
# =============================================================================
# Alle Services in einer docker-compose.yml für maximale Kontrolle
# Auto-Restart nach Stromausfall/Reboot

version: '3.8'

services:
  # =============================================================================
  # DATABASE SERVICES
  # =============================================================================
  
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: azure-b2c-postgres
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - azure-b2c-network

  # Redis Session Store & Cache
  redis:
    image: redis:7-alpine
    container_name: azure-b2c-redis
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf --appendonly yes --requirepass "${REDIS_PASSWORD}"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - azure-b2c-network

  # =============================================================================
  # MANAGEMENT & MONITORING
  # =============================================================================

  # Portainer - Docker Container Management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: azure-b2c-portainer
    restart: unless-stopped
    ports:
      - "9000:9000"   # Web UI
      - "8000:8000"   # Edge Agent HTTP
      - "9443:9443"   # Edge Agent HTTPS
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - azure-b2c-network

  # pgAdmin - PostgreSQL Web Interface
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: azure-b2c-pgadmin
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - azure-b2c-network

  # Redis Commander - Redis Web Interface
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: azure-b2c-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD}
      - HTTP_USER=admin
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD}
      - PORT=8081
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - azure-b2c-network


  # =============================================================================
  # OPTIONAL SERVICES
  # =============================================================================

  # Watchtower - Automatische Container Updates
  watchtower:
    image: containrrr/watchtower:latest
    container_name: azure-b2c-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 4 * * *  # Täglich um 4 Uhr
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${WATCHTOWER_EMAIL_FROM}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL_TO}
    networks:
      - azure-b2c-network

  # Nginx Proxy Manager - Reverse Proxy für externe Zugriffe
  nginx-proxy:
    image: jc21/nginx-proxy-manager:latest
    container_name: azure-b2c-nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
      - "81:81"     # Admin Panel
    volumes:
      - nginx_data:/data
      - nginx_letsencrypt:/etc/letsencrypt
    networks:
      - azure-b2c-network

# =============================================================================
# VOLUMES - Persistente Datenspeicherung
# =============================================================================
volumes:
  # Database Volumes
  postgres_data:
    driver: local
  redis_data:
    driver: local
  
  # Management Volumes
  portainer_data:
    driver: local
  pgadmin_data:
    driver: local
    
  # Proxy Volumes
  nginx_data:
    driver: local
  nginx_letsencrypt:
    driver: local

# =============================================================================
# NETWORKS - Isolierte Netzwerke
# =============================================================================
networks:
  azure-b2c-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
